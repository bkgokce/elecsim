actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
head(actual_mix_2018_reduced)
accurate_area_long_perc$type = 'predicted'
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "key", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
ggplot(comparison, aes(x=key, y=value_perc, fill=type)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge2")+ stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge2")
ggsave('~/Desktop/average_error_of_best_params.png')
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = time_taken), bins=30) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Time \n Taken"
print(p)
ggsave('~/Desktop/time-taken-parameters.png')
run_1 %>% arrange(desc(run_number)) %>% ggplot(alpha=0.1, aes(y=individual_m, x=individual_c)) + geom_point(aes(color=run_number, size=time_taken))
run_1 %>% filter(individual_c<-3, individual_m <0.0025, individual_m > 0.0015) %>% ggplot(aes(x=as.factor(run_number), y=time_taken)) + geom_violin()
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
accurate_area = filter(run_1, run_number==6)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
accurate_area_long_perc$type = 'predicted'
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "key", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
ggplot(comparison, aes(x=key, y=value_perc, fill=type)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge2")+ stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge2")
accurate_area
?gather
accurate_area_lines_long = accurate_area %>% gather(id, individual_m, individual_c)
accurate_area_lines_long
accurate_area_lines_long = accurate_area %>% melt(id, individual_m, individual_c)
accurate_area_lines_long = accurate_area %>% ddplyr::melt(id, individual_m, individual_c)
package("ddplyr")
package("dplyr")
package("tidyverse")
library("ddplyr")
library("dplyr")
accurate_area_lines_long = accurate_area %>% ddplyr::melt(id, individual_m, individual_c)
accurate_area_lines_long = accurate_area %>% dplyr::melt(id, individual_m, individual_c)
accurate_area_lines_long = accurate_area %>% plyr::melt(id, individual_m, individual_c)
library("plyr")
accurate_area_lines_long = accurate_area %>% plyr::melt(id, individual_m, individual_c)
library(reshape2)
accurate_area_lines_long = accurate_area %>% plyr::melt(id, individual_m, individual_c)
library(reshape2)
accurate_area_lines_long = accurate_area %>% plyr::melt(id, individual_m, individual_c)
accurate_area_lines_long = accurate_area %>% melt(id, individual_m, individual_c)
accurate_area
accurate_area_lines_long = accurate_area %>% melt(id, c("individual_m", "individual_c"))
?melt
accurate_area_lines_long =  melt(accurate_area, id, c("individual_m", "individual_c"))
accurate_area_lines_long = melt(accurate_area,c("individual_m", "individual_c"))
accurate_area_lines_long
accurate_area
?melt
library("tidyverse")
library("ggplot2")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==6)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
library("tidyverse")
library("ggplot2")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==6)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = time_taken), bins=10) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Time \n Taken"
print(p)
run_1 %>% filter(individual_c<-3, individual_m <0.0025, individual_m > 0.0015) %>% ggplot(aes(x=as.factor(run_number), y=time_taken)) + geom_violin()
ggplot(run_1, aes(x=run_number, y=time_taken)) + geom_point() +
geom_smooth(method='lm')
accurate_area
demand_range = seq(from=10000,55000, length.out = 500)
accurate_area %<% groupby(id) %>% mutate(individual_m*demand_range+individual_c)
accurate_area %>% groupby(id) %>% mutate(individual_m*demand_range+individual_c)
accurate_area %>% group_by(id) %>% mutate(individual_m*demand_range+individual_c)
accurate_area %>% group_by(id) %>% summarise(individual_m*demand_range+individual_c)
accurate_area %>% group_by(id) %>% mutate(individual_m*demand_range+individual_c)
accurate_area %>% group_by(id) %>% mutate(line = individual_m*demand_range+individual_c)
?apply
accurate_area %>% group_by(id) %>% group_map(individual_m*demand_range+individual_c)
library("dplyr")
accurate_area %>% group_by(id) %>% group_map(individual_m*demand_range+individual_c)
accurate_area %>% group_by(id) %>% dplyr::group_map(individual_m*demand_range+individual_c)
accurate_area %>% group_by(id) %>% dplyr::do(individual_m*demand_range+individual_c)
accurate_area %>% group_by(id) %>% dplyr::do(.(individual_m*demand_range+individual_c))
accurate_area %>% group_by(id) %>% dplyr::do(.individual_m*demand_range+.individual_c)
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c)
demand_range = as.data.frame(seq(from=10000,55000, length.out = 500))
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c)
ggplot(aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range, group=id))
ggplot(aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range, group=id))+geom_line()
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame()
ggplot(aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range, group=id))+geom_line()
lines
ggplot(data=lines, aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range, group=id))+geom_line()
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame() %>% group_by(id) %>% mutate(x=demand_range)
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame() %>% group_by(id) %>% mutate(x=demand_range)
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame()
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame()
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame() %>% group_by(id) %>% mutate(x=demand_range)
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame() %>% group_by(id)
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame()  %>% mutate(x=demand_range)
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c) %>% as.data.frame()  %>% mutate(x=demand_range)
lines
ggplot(data=lines, aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range))+geom_line()
ggplot(data=lines, aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range, group=id))+geom_line()
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c)  %>% mutate(x=demand_range) %>% as.data.frame()
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c)  %>% mutate(x=demand_range)
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range+.$individual_c)
demand_range = as.data.frame(x=seq(from=10000,55000, length.out = 500))
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range$x+.$individual_c)  %>% mutate(x=demand_range)
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range$x+.$individual_c)
demand_range = as.data.frame(x=seq(from=10000,55000, length.out = 500))
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range$x+.$individual_c)  %>% mutate(x=demand_range)
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range$x+.$individual_c)
demand_range
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range$`seq(from = 10000, 55000, length.out = 500)`+.$individual_c)  %>% mutate(x=demand_range)
demand_range = as.data.frame(x=seq(from=10000,55000, length.out = 500))
lines = accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range$`seq(from = 10000, 55000, length.out = 500)`+.$individual_c)  %>% mutate(x=demand_range)
accurate_area %>% group_by(id) %>% dplyr::do(.$individual_m*demand_range$`seq(from = 10000, 55000, length.out = 500)`+.$individual_c)
demand_range
lines = accurate_area %>% group_by(id) %>% mutate(y=get_line(.))
get_line = function(x){
df = x$individual_m * demand_range + x$individual_c
return(df)
}
lines = accurate_area %>% group_by(id) %>% mutate(y=get_line(.))
lines = accurate_area %>% group_by(id) %>% transform(y=get_line(.))
?transform
lines = accurate_area %>% group_by(id) %>% transform(y=get_line(.))
lines = accurate_area %>% group_by(id) %>% mutate(y=get_line(.))
lines = accurate_area %>% group_by(id) %>% transmute(y=get_line(.))
lines = accurate_area %>% group_by(id) %>% y=get_line(.)
lines = accurate_area %>% group_by(id) %>% get_line(.)
View(lines)
get_line = function(x){
df = as.data.frame(y=x$individual_m * demand_range + x$individual_c, id=x$id, x=x$x)
return(df)
}
lines = accurate_area %>% group_by(id) %>% get_line(.)
get_line = function(x){
df = as.data.frame(y=x$individual_m * demand_range + x$individual_c, id=x$id, x=demand_range)
return(df)
}
lines = accurate_area %>% group_by(id) %>% get_line(.)
ggplot(data=lines, aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range, group=id))+geom_line()
View(lines)
get_line = function(x){
df = as.data.frame(y=x$individual_m * demand_range + x$individual_c, id=x$id, x=demand_range)
return(df)
}
lines = accurate_area %>% group_by(id) %>% get_line(.)
View(lines)
lines = accurate_area %>% group_by(id) %>% apply(get_line(.))
?apply
?ddply
get_line = function(c, m){
y = as.data.frame(y=x$m * demand_range + x$c, id=x$id, x=demand_range)
return(df)
}
lines = ddply(accutate_area, .(id), mutate, y=get_line(individual_c, individual_m))
lines = ddply(accurate_area, .(id), mutate, y=get_line(individual_c, individual_m))
get_line = function(c, m){
y = as.data.frame(y=x$m * demand_range + x$c, id=x$id, x=demand_range)
return(y)
}
lines = ddply(accurate_area, .(id), mutate, y=get_line(individual_c, individual_m))
lines = ddply(accurate_area, .(id), y=get_line(individual_c, individual_m))
lines
View(lines)
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m))
ggplot(data=lines, aes(y=`seq(from = 10000, 55000, length.out = 500)`, x=demand_range, group=id))+geom_line()
demand_range = as.data.frame(x=seq(from=10000,55000,length.out=500))
get_line = function(c, m){
y = as.data.frame(y=x$m * demand_range + x$c, id=x$id, x=demand_range)
return(y)
}
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m))
ggplot(data=lines, aes(y=seq.from...10000..55000..length.out...500., x=demand_range, group=id))+geom_line()
?transform
lines = ddply(accurate_area, .(id), do, y=get_line(individual_c, individual_m))
lines
ggplot(data=lines, aes(y=seq.from...10000..55000..length.out...500., x=demand_range, group=id))+geom_line()
ggplot(data=lines, aes(y=y, x=demand_range, group=id))+geom_line()
get_line = function(c, m){
y = as.data.frame(y=m * demand_range + c, id=x$id, x=demand_range)
return(y)
}
lines = ddply(accurate_area, .(id), do, y=get_line(individual_c, individual_m))
ggplot(data=lines, aes(y=y, x=demand_range, group=id))+geom_line()
get_line = function(c, m){
y = m * demand_range + c
return(y)
}
lines = ddply(accurate_area, .(id), do, y=get_line(individual_c, individual_m))
lines = ddply(accurate_area, .(id), do, y=get_line(individual_c, individual_m))
accurate_area
View(accurate_area)
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m))
get_x = function(){
return demand_range
get_x = function(){
return(demand_range)
}
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=)
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=get_x())
ggplot(data=lines, aes(y=y, x=demand_range, group=id))+geom_line()
lines = ddply(accurate_area, .(id), mutate, y=get_line(individual_c, individual_m), x=get_x())
lines = ddply(accurate_area, .(id), do, y=get_line(individual_c, individual_m), x=get_x())
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=get_x())
lines
columns(lines)
column(lines)
ggplot(data=lines, aes(y=seq.from...10000..55000..length.out...500.1, x=seq.from...10000..55000..length.out...500., group=id))+geom_line()
ggplot(data=lines, aes(y=seq.from...10000..55000..length.out...500..1, x=seq.from...10000..55000..length.out...500., group=id))+geom_line()
ggplot(data=lines, aes(y=seq.from...10000..55000..length.out...500..1, x=seq.from...10000..55000..length.out...500., group=id))+geom_line()
ggplot(data=lines, aes(x=seq.from...10000..55000..length.out...500..1, y=seq.from...10000..55000..length.out...500., group=id))+geom_line()
ggplot(data=lines, aes(x=seq.from...10000..55000..length.out...500..1, y=seq.from...10000..55000..length.out...500., colour=id))+geom_line()
ggplot(data=lines, aes(x=seq.from...10000..55000..length.out...500..1, y=seq.from...10000..55000..length.out...500., group=id))+geom_line()
ggplot(data=lines, aes(x=seq.from...10000..55000..length.out...500..1, y=seq.from...10000..55000..length.out...500., group=id, color=reward))+geom_line()
library("tidyverse")
library("ggplot2")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==6)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==6)
accurate_area
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
actual_mix_2018_reduced
accurate_area = filter(run_1, run_number==9)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
head(actual_mix_2018_reduced)
accurate_area_long_perc$type = 'predicted'
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "key", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
library("tidyverse")
library("ggplot2")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==9)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
actual_mix_2018_reduced
accurate_area_long_perc$type = 'predicted'
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "variable", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "key", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
select(actual_mix_2018_reduced, -X1, -year)
accurate_area_long_perc
select(actual_mix_2018_reduced, -X1, -year)
library("tidyverse")
library("ggplot2")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==9)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
library("tidyverse")
library("ggplot2")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==9)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
head(actual_mix_2018_reduced)
accurate_area_long_perc$type = 'predicted'
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "key", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
ggplot(comparison, aes(x=key, y=value_perc, fill=type)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge2")+ stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge2")
ggsave('~/Desktop/average_error_of_best_params.png')
demand_range = as.data.frame(x=seq(from=10000,55000,length.out=500))
get_line = function(c, m){
y = m * demand_range + c
return(y)
}
get_x = function(){
return(demand_range)
}
# lines = accurate_area %>% group_by(id) %>% apply(get_line(.))
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=get_x())
library("tidyverse")
library("ggplot2")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==9)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
head(actual_mix_2018_reduced)
accurate_area_long_perc$type = 'predicted'
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "key", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
ggplot(comparison, aes(x=key, y=value_perc, fill=type)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge2")+ stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge2")
ggsave('~/Desktop/average_error_of_best_params.png')
demand_range = as.data.frame(x=seq(from=10000,55000,length.out=500))
get_line = function(c, m){
y = m * demand_range + c
return(y)
}
get_x = function(){
return(demand_range)
}
# lines = accurate_area %>% group_by(id) %>% apply(get_line(.))
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=get_x())
library("dplyr")
library("tidyverse")
library("ggplot2")
library("dplyr")
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==9)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
head(actual_mix_2018_reduced)
accurate_area_long_perc$type = 'predicted'
accurate_area_long_perc
comparison = rbind(select(ungroup(accurate_area_long_perc), "key", "type", "value", 'value_perc'), select(actual_mix_2018_reduced, -X1, -year))
ggplot(comparison, aes(x=key, y=value_perc, fill=type)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge2")+ stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge2")
ggsave('~/Desktop/average_error_of_best_params.png')
demand_range = as.data.frame(x=seq(from=10000,55000,length.out=500))
get_line = function(c, m){
y = m * demand_range + c
return(y)
}
get_x = function(){
return(demand_range)
}
# lines = accurate_area %>% group_by(id) %>% apply(get_line(.))
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=get_x())
library("tidyverse")
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=get_x())
library(plyr)
lines = ddply(accurate_area, .(id), transform, y=get_line(individual_c, individual_m), x=get_x())
library(plyr)
library("tidyverse")
library("ggplot2")
library(plyr)
run_1 = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/run/validation-optimisation/data/run_2.csv')
tail(run_1)
ggplot(filter(run_1, run_number==1), aes(y=individual_m, x=individual_c)) + geom_hex(bins=10)
p=ggplot(run_1, aes(y=individual_m, x=individual_c)) + stat_summary_hex(aes(z = reward), bins=7) + facet_wrap(~ run_number) + scale_x_continuous(breaks = round(seq(min(run_1$individual_c), max(run_1$individual_c), by = 25),1))
p$labels$fill <- "Absolute \nPercentage \nError"
print(p)
ggsave("~/Desktop/genetic_algorithm_progression.png")
# accurate_area = filter(run_1, individual_c<-4.8, individual_c>-50, individual_m <0.003, individual_m > 0.0023)
# accurate_area = filter(run_1, reward < 0.2)
accurate_area = filter(run_1, run_number==9)
accurate_area
accurate_area_long = gather(accurate_area, "key", "value", "coal", "ccgt", "wind", "nuclear", "solar")
accurate_area_long_perc = accurate_area_long %>% group_by(id) %>% mutate(value_perc = value/sum(value))
actual_mix = read_csv('/Users/b1017579/Documents/PhD/Projects/10. ELECSIM/elecsim/data/processed/electricity_mix/energy_mix_historical.csv')
actual_mix_2018 = filter(actual_mix, year==2018)
actual_mix_2018$type = "actual"
actual_mix_2018
actual_mix_2018_reduced = filter(actual_mix_2018, variable %in% c("ccgt", 'wind', 'nuclear', 'solar', 'coal'))
actual_mix_2018_reduced = actual_mix_2018_reduced %>% mutate(value_perc = value/sum(value))
actual_mix_2018_reduced = rename(actual_mix_2018_reduced, key=variable)
